{"version":3,"file":"component---src-pages-callback-js-033f59dfb98aad0540e0.js","mappings":"yRA0TA,EAzTmB,SAACA,GAClB,OAAOA,GAEL,IAAK,kBAoEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBAEL,IAAK,kB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","sources":["webpack://shuffleforspotify/./src/utils/colorToRgb.js","webpack://shuffleforspotify/./src/components/paper.js","webpack://shuffleforspotify/./src/pages/callback.js"],"sourcesContent":["// Accepts a Web Color String or Hex string (#xxxxxx) and outputs RGB values\nconst colorToRgb = (color) => {\n  switch(color) {\n    // Pink\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'DeepPink':\n      return {red: 255, green: 20, blue: 147}\n    case 'PaleVioletRed':\n      return {red: 219, green: 112, blue: 147}\n    case 'HotPink':\n      return {red: 255, green: 105, blue: 180}\n    case 'LightPink':\n      return {red: 255, green: 182, blue: 193}\n    case 'Pink':\n      return {red: 255, green: 192, blue: 203}\n\n    // Red\n    case 'DarkRed':\n      return {red: 139, green: 0, blue: 0}\n    case 'Red':\n      return {red: 255, green: 0, blue: 0}\n    case 'FireBrick':\n      return {red: 178, green: 34, blue: 34}\n    case 'Crimson':\n      return {red: 220, green: 20, blue: 60}\n    case 'IndianRed':\n      return {red: 205, green: 92, blue: 92}\n    case 'LightCoral':\n      return {red: 240, green: 128, blue: 128}\n    case 'Salmon':\n      return {red: 250, green: 128, blue: 114}\n    case 'DarkSalmon':\n      return {red: 233, green: 150, blue: 122}\n    case 'LightSalmon':\n      return {red: 255, green: 160, blue: 122}\n    case 'OrangeRed':\n      return {red: 255, green: 69, blue: 0}\n    case 'Tomato':\n      return {red: 255, green: 99, blue: 71}\n    case 'DarkOrange':\n      return {red: 255, green: 140, blue: 0}\n    case 'Coral':\n      return {red: 255, green: 127, blue: 80}\n    case 'Orange':\n      return {red: 255, green: 165, blue: 0}\n    \n    // Yellow\n    case 'DarkKhaki':\n      return {red: 189, green: 183, blue: 107}\n    case 'Gold':\n      return {red: 255, green: 215, blue: 0}\n    case 'Khaki':\n      return {red: 240, green: 230, blue: 140}\n      case 'PeachPuff':\n      return {red: 255 , green: 218, blue: 185}\n    case 'Yellow':\n      return {red: 255, green: 255, blue: 0}\n    case 'PaleGoldenrod':\n      return {red: 238, green: 232, blue: 170}\n    case 'Moccasin':\n      return {red: 255, green: 228, blue: 181}\n    case 'PapayaWhip':\n      return {red: 255, green: 239, blue: 213}\n    case 'LightGoldenrodYellow':\n      return {red: 250, green: 250, blue: 210}\n    case 'LemonChiffron':\n      return {red: 255, green: 250, blue: 205}\n    case 'LightYellow':\n      return {red: 255, green: 255, blue: 224}\n\n    // Brown\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n    case 'MediumVioletRed':\n      return {red: 199, green: 21, blue: 133}\n\n    // Hex color parsing\n    default:\n      // Check for string length\n      if (color.length > 7 || color.length < 6) { \n        throw new Error(\"Invalid color string, please enter a valid Web Color or a hexadecimal string (#xxxxxx)\")\n      }\n\n      // Check for leading # symbol and remove it\n      color = color.replace(\"#\", \"\")\n      // Convert red\n      const red = parseInt(color.slice(0, 2), 16)\n      // Convert green\n      const green = parseInt(color.slice(2, 4), 16)\n      // Convert blue\n      const blue = parseInt(color.slice(4, 6), 16)\n\n      return {red, green, blue}\n      \n  }\n}\n\nexport default colorToRgb","import * as React from 'react';\nimport styled from 'styled-components';\nimport colorToRgb from '../utils/colorToRgb';\n\nconst StyledContainer = styled.div`\n  ${(props) => (\n    props.square ? \"border-radius: 0;\" : \"border-radius: 4px;\"\n  )}\n  ${(props) => {\n    const rgbColor = colorToRgb(props.color)\n\n    return `background: rgba(${rgbColor.red}, ${rgbColor.green}, ${rgbColor.blue}, ${props.opacity});`\n  }}\n  color: ${props => props.theme.colors.text.primary};\n  overflow: hidden;\n  min-width: 275px;\n  margin: 20px;\n`\n\nconst StyledContent = styled.div`\n  font-family: 'GothamSSm-Book';\n  font-size: 12px;\n  letter-spacing: 0.125rem;\n  color: #B3B3B3;\n  margin: 0px 20px;\n  padding: 16px;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n`\n\n/*\n Props/options:\n square: bool (false) - if true, uses square corners instead of round\n color: string (#181717) - sets the base color\n opaciy: float (1) - sets the opacity\n\n*/\n\nconst Paper = ({ children, square = false, color = \"#181717\", opacity = 1 }) => {\n  return (\n    <StyledContainer square={square} color={color} opacity={opacity}>\n      <StyledContent>\n        {children}\n      </StyledContent>\n    </StyledContainer>\n  )\n}\n\nexport default Paper;","import * as React from 'react';\nimport { navigate } from 'gatsby';\nimport { motion } from 'framer-motion';\nimport LibraryLayout from '../layout/libraryLayout.js';\nimport ContentContainer from '../components/contentContainer.js';\nimport LoadingSpinner from '../components/loadingSpinner';\nimport Paper from '../components/paper';\nimport ErrorDialog from '../components/errorDialog'\nimport Button from '../components/button.js';\n\nconst CallbackPage = ({ location }) => {\n  const [state, setState] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(false);\n  \n  // Fetch user data from a given Sotify API token\n  const fetchUser = async (token) => {\n    const res = await fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n    }).then(response => {\n      return response.json()\n    }\n    ).then(response => {\n      console.log(response)\n        return {\n          error: response.error ? true : false,\n          data: response\n        }\n    // NOTE: I don't think this catch statement will ever fire\n    }).catch(error => {\n      return {\n        error: true,\n        data: error\n      }\n    })\n\n    return res\n  }\n\n  React.useEffect(async () => {\n    // Set loading to true\n    setLoading(true);\n    \n    // Get params from hash and query params (if present)\n    const params = new URLSearchParams(location.hash.substr(1));\n    const loginError = new URLSearchParams(location.search.substr(1))\n\n    // Check for error param (present if user denied access)\n    if (loginError.get(\"error\")) {\n      setError({ status: '401', message: \"User declined permissions\"});\n      setLoading(false);\n      return\n    }\n\n    // NOTE: Due to the absence of a state variable, it's possible a user could access this page without a valid token\n\n    // Get access token from url hash params\n    const token = params.get(\"access_token\");\n    \n    // Fetch user data from Spotify API\n    const response = await fetchUser(token)\n\n    // Check for error property in API response\n    if (response.error) {\n      setError(response.data.error);\n      setLoading(false);\n      return\n    }\n\n    // Check and set user's premium status and name\n    const premium = response.data.product === 'premium' ? true : false;\n    const name = response.data.display_name;\n    const id = response.data.id\n\n    // Set state to be passed to next page\n    setState({\n      token,\n      premium,\n      name,\n      id\n    })\n\n    // Set loading to false\n    setLoading(false);\n\n  }, [])\n\n  return (\n    <LibraryLayout>\n      <ContentContainer>\n        {\n          loading ? <LoadingSpinner /> : (\n            error ? <ErrorDialog>Error: <br/> {error.message}</ErrorDialog> : (\n              <motion.div\n                initial={{\n                  opacity: 0,\n                  x: -200\n                }}\n                animate={{\n                  opacity: 1,\n                  x: 0\n                }}\n                exit={{\n                  opacity: 0,\n                  x: 200\n                }}\n                transition={{\n                  type: \"spring\",\n                  mass: 0.35,\n                  stiffness: 75,\n                  duration: 0.3\n                }}\n              >\n                <h2 style={{fontSize: \"28px\", marginLeft: '20px'}}>Choose a method</h2>\n              <Paper>\n                <Button \n                  gutterTop\n                  variant={state.premium ? 'filled' : 'disabled'} \n                  disabled={!state.premium}\n                >\n                  Add to Queue\n                </Button>\n                <p style={{marginBottom: '20px'}}>\n                  {state.premium ? (\n                    <>\n                    ADD SONGS FROM A<br/>\n                    PLAYLIST OR LIBRARY<br/>\n                    DIRECTLY TO YOUR QUEUE<br/>\n                    (300 SONG MAX)\n                    </>\n                  ) : (<>ONLY AVAILABLE WITH<br/>SPOTIFY PREMIUM</>)}\n                  </p>\n                <Button\n                  gutterTop\n                  color=\"white\"\n                  onClick={\n                    () => navigate(\"/shuffle\", { state: state})\n                  }\n                >\n                  Shuffle Playlist\n                </Button>\n                <p style={{marginBottom: '20px'}}>\n                  SHUFFLE A PLAYLIST<br/>\n                  IN PLACE<br/>\n                  (FOR LONGER PLAYLISTS)\n                  </p>\n                <p style={{margin: '20px'}}>--- OR ---</p>\n                <Button\n                  gutterTop\n                  color=\"white\"\n                  variant=\"disabled\"\n                >\n                  Sort Playlist\n                </Button>\n                <p style={{marginBottom: '20px'}}>\n                  SORT A PLAYLIST USING<br/>\n                  A VARIETY OF FILTERS<br/>\n                  (COMING SOON!)<br/>\n                  </p>\n              </Paper>\n              </motion.div>\n            )\n          )\n        }\n      </ContentContainer>\n    </LibraryLayout>\n  )\n}\n\nexport default CallbackPage;"],"names":["color","red","green","blue","length","Error","replace","parseInt","slice","StyledContainer","styled","props","square","rgbColor","colorToRgb","opacity","theme","colors","text","primary","StyledContent","children","location","React","state","setState","loading","setLoading","error","setError","fetchUser","token","fetch","method","headers","then","response","json","console","log","data","res","params","URLSearchParams","hash","substr","search","get","status","message","premium","product","name","display_name","id","motion","initial","x","animate","exit","transition","type","mass","stiffness","duration","style","fontSize","marginLeft","gutterTop","variant","disabled","marginBottom","onClick","navigate","margin"],"sourceRoot":""}